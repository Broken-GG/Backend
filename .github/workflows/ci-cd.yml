name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main, develop]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Build and Test
  build-and-test:
    name: Build & Test .NET API
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore Backend.csproj
    
    - name: Build
      run: dotnet build Backend.csproj --no-restore --configuration Release
    
    - name: Create .env file for tests
      run: |
        mkdir -p src
        echo "RIOT_API_KEY=${{ secrets.RIOT_API_KEY }}" > src/.env
        echo "RIOT_ACCOUNT_API_URL=https://europe.api.riotgames.com/riot/account/v1/accounts/by-riot-id" >> src/.env
        echo "RIOT_SUMMONER_API_URL=https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-puuid" >> src/.env
        echo "RIOT_MATCH_API_URL=https://europe.api.riotgames.com/lol/match/v5/matches/by-puuid" >> src/.env
        echo "RIOT_MATCH_DETAILS_API_URL=https://europe.api.riotgames.com/lol/match/v5/matches" >> src/.env
        echo "ASPNETCORE_ENVIRONMENT=Development" >> src/.env
    
    - name: Debug RIOT_API_KEY
      run: |
        if [ -z "$RIOT_API_KEY" ]; then
          echo "RIOT_API_KEY is NOT set in environment!"
        else
          echo "RIOT_API_KEY is set in environment (masked)."
        fi
      env:
        RIOT_API_KEY: ${{ secrets.RIOT_API_KEY }}
    
    - name: Run tests
      run: dotnet test Backend.csproj --no-build --configuration Release --verbosity normal
      env:
        RIOT_API_KEY: ${{ secrets.RIOT_API_KEY }}
        RIOT_API_URL: https://europe.api.riotgames.com/riot/account/v1/accounts/by-riot-id
        RIOT_SUMMONER_URL: https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-puuid
        ASPNETCORE_ENVIRONMENT: Production
        ASPNETCORE_URLS: http://+:5000
    
    - name: Publish
      run: dotnet publish Backend.csproj --no-build --configuration Release --output ./publish

  # Docker Build
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker Image
      run: |
        docker build -t brokengg-backend:latest .
        docker build -t brokengg-backend:${{ github.sha }} .
    
    - name: Test Docker Image
      run: |
        docker run -d --name test-backend -p 5000:5000 brokengg-backend:latest
        sleep 10
        curl -f http://localhost:5000/api/health || exit 1
        docker stop test-backend
        docker rm test-backend
    
    # Optional: Push to Docker Hub
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    # 
    # - name: Push to Docker Hub
    #   run: |
    #     docker tag brokengg-backend:latest ${{ secrets.DOCKER_USERNAME }}/brokengg-backend:latest
    #     docker tag brokengg-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/brokengg-backend:${{ github.sha }}
    #     docker push ${{ secrets.DOCKER_USERNAME }}/brokengg-backend:latest
    #     docker push ${{ secrets.DOCKER_USERNAME }}/brokengg-backend:${{ github.sha }}

  # Security Scan
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
      continue-on-error: true
